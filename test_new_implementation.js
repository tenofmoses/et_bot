// Test the new simplified tournament implementation

function testNewImplementation(playerCount) {
    console.log(`\n=== –ù–û–í–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø: ${playerCount} –ò–ì–†–û–ö–û–í ===`);
    
    let currentPlayers = playerCount;
    let roundNumber = 1;
    let totalMatches = 0;
    
    while (currentPlayers > 1) {
        let matchesThisRound;
        
        if (currentPlayers % 2 === 0) {
            // Even number of players - all play
            matchesThisRound = currentPlayers / 2;
        } else {
            // Odd number of players - one gets bye
            matchesThisRound = Math.floor(currentPlayers / 2);
        }
        
        console.log(`–†–∞—É–Ω–¥ ${roundNumber}: ${matchesThisRound} –º–∞—Ç—á–µ–π (${currentPlayers} –∏–≥—Ä–æ–∫–æ–≤)`);
        
        if (currentPlayers % 2 === 1) {
            console.log(`  ‚úì 1 –∏–≥—Ä–æ–∫ –ø–æ–ª—É—á–∞–µ—Ç bye`);
        }
        
        totalMatches += matchesThisRound;
        
        // Calculate players for next round
        const winners = matchesThisRound;
        const byePlayers = currentPlayers % 2; // 0 or 1
        currentPlayers = winners + byePlayers;
        roundNumber++;
    }
    
    const expectedMatches = playerCount - 1;
    console.log(`–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ç—á–µ–π: ${totalMatches}`);
    console.log(`–û–∂–∏–¥–∞–ª–æ—Å—å: ${expectedMatches}`);
    console.log(`${totalMatches === expectedMatches ? '‚úÖ –ö–û–†–†–ï–ö–¢–ù–û' : '‚ùå –û–®–ò–ë–ö–ê'}`);
    
    return totalMatches === expectedMatches;
}

// Test the specific case mentioned by user: 20 players
console.log('–ü–†–û–í–ï–†–ö–ê –ü–†–ò–ú–ï–†–ê: 20 –ò–ì–†–û–ö–û–í');
console.log('=============================');
testNewImplementation(20);

// Test all cases from 3 to 100
console.log('\n\n–¢–ï–°–¢ –í–°–ï–• –°–õ–£–ß–ê–ï–í 3-100:');
console.log('========================');

let successCount = 0;
let totalTests = 0;
const failedCases = [];

for (let players = 3; players <= 100; players++) {
    totalTests++;
    const success = testNewImplementation(players);
    if (success) {
        successCount++;
    } else {
        failedCases.push(players);
    }
}

console.log(`\n=== –ò–¢–û–ì–ò ===`);
console.log(`–£—Å–ø–µ—à–Ω–æ: ${successCount}/${totalTests} (${Math.round(successCount/totalTests*100)}%)`);

if (failedCases.length > 0) {
    console.log(`–ù–µ—É–¥–∞—á–Ω—ã–µ —Å–ª—É—á–∞–∏: ${failedCases.join(', ')}`);
} else {
    console.log('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!');
}

// Show specific examples
console.log('\n=== –ö–û–ù–ö–†–ï–¢–ù–´–ï –ü–†–ò–ú–ï–†–´ ===');

const examples = [3, 4, 5, 8, 16, 20, 32, 64];
examples.forEach(players => {
    console.log(`\n${players} –∏–≥—Ä–æ–∫–æ–≤:`);
    testNewImplementation(players);
});
